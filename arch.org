#+title: arch/os stuff
#+author: frederic.boilea
#+html_head: <link rel="stylesheet" type="text/css" href="https://gongzhitaao.org/orgcss/org.css"/>
* myconf
** i3                                                               :stable:
:PROPERTIES:
:header-args: :tangle ~/.config/mpd/mpd.conf :comments link
:END:
*** main conf
:PROPERTIES:
:header-args: :tangle ~/.config/i3/config :comments link
:END:
#+BEGIN_SRC conf
# i3 config file for frederic boileau
#
exec source ~/.profile
exec source ~/.bashrc.aliases

set $mod Mod4
for_window [class=".*"] border pixel 4
font pango:monospace 10
font pango: Hack, FontAwesome 15
gaps inner 15
gaps outer 15
set $term termite
set $shell /usr/bin/zsh
#set $browser brave
exec_always feh --bg-scale "/home/gaston/pics/wallpapers/blue-and-dark-sky-by-mark-kirkpatrick-3840×2160.jpg"
exec xmodmap ~/.xmodmap


exec source ~/.bashrc
exec source ~/.zshrc
exec source ~/.profile

exec unclutter

bindsym $mod+Tab workspace next
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "emacsclient -c"
bindsym $mod+q kill
bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i2? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

###---Basic definitions---###
# Use Mouse+$mod to drag floating windows to their wanted position
bindsym $mod+Return exec termite
# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec --no-startup-id rofi -show run
bindsym $mod+w exec --no-startup-id rofi -show window



bindsym $mod+Shift+b exec ~/apps/i3-focus-last switch
exec --no-startup-id "~/apps/i3-focus-last"


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
bindsym $mod+Shift+h move left 20
bindsym $mod+Shift+j move down 20
bindsym $mod+Shift+k move up 20
bindsym $mod+Shift+l move right 19
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
bindsym $mod+O split vertical
bindsym $mod+P split horizontal
bindsym $mod+f fullscreen toggle
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+u focus parent
bindsym $mod+semicolon focus child

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5:reading"
set $ws6 "6:media-proc"
set $ws7 "7:ssh"
set $ws8 "8:background"
set $ws9 "9:main"
set $ws10 "10:prog"

bindsym $mod+b workspace back_and_forth
#bindsym $mod+Shift+b move container to workspace back_and_forth
# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
    bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
    bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
    bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
    bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
    bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
    bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

bar {
    font pango:DejaVu Sans Mono, FontAwesome 12
        position top
        tray_output DP-1

        status_command i3status
}
set $Locker i3lock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
        bindsym e exec --no-startup-id i3-msg exit, mode "default"
        bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
        bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
        bindsym r exec --no-startup-id systemctl reboot, mode "default"
        bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

# back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+s mode "$mode_system"
exec xautolock -time 20 -locker "i3lock -i '~/Pictures/rain2.jpg' &"




# class                 border  bground text    indicator child_border
client.focused          #6272A4 #6272A4 #F8F8F2 #6272A4   #6272A4
client.focused_inactive #44475A #44475A #F8F8F2 #44475A   #44475A
client.unfocused        #282A36 #282A36 #BFBFBF #282A36   #282A36
client.urgent           #44475A #FF5555 #F8F8F2 #FF5555   #FF5555
client.placeholder      #282A36 #282A36 #F8F8F2 #282A36   #282A36

client.background       #F8F8F2

bar {
  colors {
    background #282A36
    statusline #F8F8F2
    separator  #44475A

    focused_workspace  #44475A #44475A #F8F8F2
    active_workspace   #282A36 #44475A #F8F8F2
    inactive_workspace #282A36 #282A36 #BFBFBF
    urgent_workspace   #FF5555 #FF5555 #F8F8F2
    binding_mode       #FF5555 #FF5555 #F8F8F2
  }
}


#+END_SRC
*** status bar
:PROPERTIES:
:header-args: :tangle ~/.config/i3status/config :comments link
:END:
#+BEGIN_SRC conf
general {
        output_format = "i3bar"
        colors = false
        markup = pango
        interval = 5
        color_good = '#2f343f'
		color_degraded = '#ebcb8b'
		color_bad = '#ba5e57'
}

order += "cpu_usage"
order += "load"
order += "cpu_temperature 0"
order += "disk /"
order += "disk /home"
order += "ethernet eno1"
order += "volume master"
order += "tztime local"


cpu_usage {
        format = "<span background='#a29bfe'> usage CPU_0: %cpu0 CPU_1: %cpu1  </span>"
}
load {
        format = "<span background='#f59335'>  %5min Load </span>"
}

cpu_temperature 0 {
        format = "<span background='#bf616a'>  %degrees °C </span>"
        path = "/sys/class/thermal/thermal_zone0/temp"
}

disk "/" {
        format = "<span background='#fec7cd'>  %free Free </span>"
}

disk "/home" {
        format = "<span background='#a1d569'>  %free Free </span>"
}

ethernet eno1 {
        format_up = "<span background='#88c0d0'>  %ip </span>"
        format_down = "<span background='#88c0d0'>  Disconnected </span>"
}


volume master {
        format = "<span background='#ebcb8b'>  %volume </span>"
        format_muted = "<span background='#ebcb8b'>  Muted </span>"
        device = "default"
        mixer = "Master"
        mixer_idx = 0
}


tztime local {
		format = "<span background='#81a1c1'> %time </span>"
		format_time = " %a %-d %b %H:%M"
}

general {
  output_format = "i3bar"
  colors = true
  color_good = "#50FA7B"
  color_degraded = "#F1FA8C"
  color_bad = "#FF5555"
}
#+END_SRC
** tmux
#+begin_src conf :tangle ~/.tmux.conf :comments link
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix
bind-key -n C-a send-prefix
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
setw -g mouse on
set-option -g default-shell "/bin/zsh"
# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set-option -g set-titles on
set-option -g default-terminal 'screen-256color'
set -g status-keys vi
setw -g mode-keys vi
set -g history-limit 10000
setw -g monitor-activity on
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

set -g status-bg "#666666"
set -g status-bg "#aaaaaa"
set -g status-left-length 50
set -g status-right '#{prefix_highlight} CPU: #{cpu_icon} #{cpu_percentage} | %a %Y-%m-%d %H:%M'


run-shell "powerline-daemon -q"
source "$HOME/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"

set -g @continuum-boot 'on'

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind  H resize-pane -L 4
bind  L resize-pane -R 4
bind  J resize-pane -D 2
bind  K resize-pane -U 2

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

bind c new-window -c '#{pane_current_path}'
bind b break-pane -d

bind-key C-j choose-tree


#Vim/Copy mode
setw -g mode-keys vi

# vi like copy paste behaviour
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle
bind-key -T copy-mode-vi C-\ select-pane -l

# Update default binding of `Enter` to also use copy-pipe
#unbind -Tcopy-mode-vi-copy Enter
#bind-key -T vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# THEME
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-cpu'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @continuum-restore 'on'

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

run -b '~/.tmux/plugins/tpm/tpm'
#+end_src

** mpd                                                              :stable:
:PROPERTIES:
:header-args: :tangle ~/.config/mpd/mpd.conf :comments link
:END:
*** basic file setup
#+begin_src conf
music_directory   "~/tallboi_real/musicmusic/"
playlist_directory    "~/.mpd/playlists"
db_file     "~/.mpd/database"
log_file      "~/.mpd/log"
pid_file      "~/.mpd/pid"
state_file      "~/.mpd/state"
sticker_file      "~/.mpd/sticker.sql"
filesystem_charset    "UTF-8"
#+end_src

*** general system options
#+begin_src conf
# For network
bind_to_address   "127.0.0.1"
# And for Unix Socket
bind_to_address   "~/.mpd/socket"
port        "6600"
log_level     "default"
restore_paused "no"
#save_absolute_paths_in_playlists "no"
metadata_to_use  "artist,album,title,track,name,genre,date,composer,performer,disc"
#metadata_to_use "+comment"
auto_update "yes"
auto_update_depth "10"
#follow_outside_symlinks  "yes"
#follow_inside_symlinks   "yes"
zeroconf_enabled    "yes"
zeroconf_name     "Music Player @ %h"

audio_output {
type    "pulse"
name    "My Pulse Output"
##  server    "remote_server"   # optional
##  sink    "remote_server_sink"  # optional
}
#+end_src
*** notlive
:PROPERTIES:
:header-args: :tangle no
:END:
**** examples of audio output
***** alsa
#+name:examples of audio output for mpd: alsa
#+begin_src conf :tangle no
audio_output {
type                    "alsa"
name                    "Sound Card"
options                 "dev=dmixer"
device                  "plug:dmix"
}
audio_output {
type    "alsa"
name    "My ALSA Device"
device    "hw:0,0"  # optional
mixer_type      "hardware"  # optional
mixer_device  "default" # optional
mixer_control "PCM"   # optional
mixer_index "0"   # optional
}
#+end_src

***** oss
#+name: An example of an OSS output:
#+begin_src conf :tangle no
audio_output {
type    "oss"
name    "My OSS Device"
 device    "/dev/dsp"  # optional
 mixer_type      "hardware"  # optional
 mixer_device  "/dev/mixer"  # optional
 mixer_control "PCM"   # optional
}

#+end_src
***** shout
#+name: An example of a shout output (for streaming to Icecast):
#+begin_src conf :tangle no
audio_output {
type    "shout"
encoder   "vorbis"    # optional
name    "My Shout Stream"
host    "localhost"
port    "8000"
mount   "/mpd.ogg"
password  "hackme"
quality   "5.0"
bitrate   "128"
format    "44100:16:1"
 protocol  "icecast2"    # optional
 user    "source"    # optional
 description "My Stream Description" # optional
 url   "http://example.com"  # optional
  genre   "jazz"      # optional
  public    "no"      # optional
  timeout   "2"     # optional
  mixer_type      "software"    # optional
}
#+end_src
***** recorder
#+name: An example of a recorder output:
#+begin_src conf :tangle no
audio_output {
type    "recorder"
name    "My recorder"
encoder   "vorbis"    # optional, vorbis or lame
path    "/var/lib/mpd/recorder/mpd.ogg"
 quality   "5.0"     # do not define if bitrate is defined
bitrate   "128"     # do not define if quality is defined
format    "44100:16:1"
}
#+end_src
***** httpd
#+name:  An example of a httpd output (built-in HTTP streaming server):
#+begin_src conf :tangle no
audio_output {
 type    "httpd"
 name    "My HTTP Stream"
 encoder   "vorbis"    # optional, vorbis or lame
 port    "8000"
 bind_to_address "0.0.0.0"   # optional, IPv4 or IPv6
  quality   "5.0"     # do not define if bitrate is defined
 bitrate   "128"     # do not define if quality is defined
 format    "44100:16:1"
 max_clients "0"     # optional 0=no limit
}
## Example "pipe" output:
#audio_output {
# type    "pipe"
# name    "my pipe"
# command   "aplay -f cd 2>/dev/null"
## Or if you're want to use AudioCompress
# command   "AudioCompress -m | aplay -f cd 2>/dev/null"
## Or to send raw PCM stream through PCM:
# command   "nc example.org 8765"
# format    "44100:16:2"
}
#+end_src
**** rest
:PROPERTIES:
:header-args: :tangle no
:END:
#+begin_src conf
# Normalization automatic volume adjustments ##################################
#
# This setting specifies the type of ReplayGain to use. This setting can have
# the argument "off", "album", "track" or "auto". "auto" is a special mode that
# chooses between "track" and "album" depending on the current state of
# random playback. If random playback is enabled then "track" mode is used.
# See <http://www.replaygain.org> for more details about ReplayGain.
# This setting is off by default.
#
#replaygain     "album"
#
# This setting sets the pre-amp used for files that have ReplayGain tags. By
# default this setting is disabled.
#
#replaygain_preamp    "0"
#
# This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
# By default this setting is disabled.
#
#replaygain_missing_preamp  "0"
#
# This setting enables or disables ReplayGain limiting.
# MPD calculates actual amplification based on the ReplayGain tags
# and replaygain_preamp / replaygain_missing_preamp setting.
# If replaygain_limit is enabled MPD will never amplify audio signal
# above its original level. If replaygain_limit is disabled such amplification
# might occur. By default this setting is enabled.
#
#replaygain_limit   "yes"
#
# This setting enables on-the-fly normalization volume adjustment. This will
# result in the volume of all playing audio to be adjusted so the output has
# equal "loudness". This setting is disabled by default.
#
#volume_normalization   "no"
#
###############################################################################
#+end_src

** termite                                                          :stable:
:PROPERTIES:
:header-args: :tangle ~/.config/termite/config :comments link
:END:
#+BEGIN_SRC conf
[options]
font = Iosevka 22


[colors]
cursor = #d8dee9
cursor_foreground = #2e3440

foreground = #d8dee9
foreground_bold = #d8dee9
background = #2e3440

highlight = #4c566a

color0  = #3b4252
color1  = #bf616a
color2  = #a3be8c
color3  = #ebcb8b
color4  = #81a1c1
color5  = #b48ead
color6  = #88c0d0
color7  = #e5e9f0
color8  = #4c566a
color9  = #bf616a
color10 = #a3be8c
color11 = #ebcb8b
color12 = #81a1c1
color13 = #b48ead
color14 = #8fbcbb
color15 = #eceff4
#+END_SRC

** zsh                                                              :stable:
:PROPERTIES:
:header-args: :tangle ~/.zshrc :comments link
:END:
#+BEGIN_SRC shell
source ~/.profile
source ~/.bashrc.aliases

fpath=( "~/utilities/zfunctions" "${fpath[@]}" )
fpath=( "~/utilities/zfunctions/myCode" "${fpath[@]}" )
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -r 's/ *[0-9]*\*? *//' | sed -r 's/\\/\\\\/g')
}

zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

export POWERLEVEL8K_MODE='nerdfont-complete'
export ZSH_THEME=""

source ~/utilities/antigen.zsh
antigen use oh-my-zsh
antigen bundle git
antigen bundle pip
antigen bundle fzf
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle djui/alias-tips
antigen bundle mafredri/zsh-async
antigen bundle
antigen bundle npm
antigen bundle yourfin/pure-agnoster
antigen apply
#+END_SRC

** compton                                                          :stable:
:PROPERTIES:
:header-args: :tangle ~/.config/compton/compton.conf :comments link
:END:
#+BEGIN_SRC conf
backend = "glx";
vsync = "opengl";
shadow = true;
no-dnd-shadow = true;
no-dock-shadow = true;
clear-shadow = true;
shadow-radius = 2;
shadow-offset-x = 1;
shadow-offset-y = 1;
shadow-opacity = 0.3;
shadow-red = 0.0;
shadow-green = 0.0;

shadow-blue = 0.2;
shadow-ignore-shaped = true;
inactive-opacity = 0.9;
frame-opacity = 0.9;
inactive-opacity-override = false;
alpha-step = 0.06;
inactive-dim = 0.2;
blur-kern = "3x3box";
blur-background-exclude = [ "window_type = 'dock'", "window_type = 'desktop'" ];
fading = false;
fade-in-step = 0.03;
fade-out-step = 0.03;
fade-exclude = [ ];
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 0;
dbe = false;
paint-on-overlay = true;
focus-exclude = [ "class_g = 'Cairo-clock'" ];
detect-transient = true;
detect-client-leader = true;
invert-color-include = [ ];
glx-copy-from-front = false;
glx-swap-method = "undefined";
wintypes :
{
tooltip :
  {
    fade = true;
    shadow = false;
    opacity = 1;
    focus = true;
  };
};
blur-background = true;
blur-background-frame = true;
no-fading-openclose = true;
opacity-rule = [ "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'" ];

#+END_SRC

** aliases                                                          :stable:
:PROPERTIES:
:header-args: :tangle ~/.bashrc.aliases :comments link
:END:
#+BEGIN_SRC shell
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias pacman='sudo pacman'
alias journalctl='sudo journalctl'
alias systemctl='sudo systemctl'

alias c='clear'
alias cp='cp -i'
alias mv='mv -i'
alias j='jobs'
alias o='xdg-open'
alias r='ranger'
alias tma='tmux attach-session -t'
alias m='pulsemixer'
alias n='nvim'

alias weather='curl -H \"Accept-Language: fr\" wttr.in/montreal'



#+END_SRC

** TODO ranger
** TODO clipboard management
[[https://www.reddit.com/r/archlinux/comments/9v5yhr/which_clipboard_manager_do_you_use/][Which clipboard manager do you use? : archlinux]]
https://github.com/astrand/xclip
https://github.com/gilbertw1/roficlip
https://github.com/mrichar1/clipster
** TODO screenshots/captures
*** maim/xclip scripts
** TODO rofi
** HOLD conky


* packages
** livecli                                                             :aur:

* fonts
- https://wiki.archlinux.org/index.php/Fonts

** sample pkgbuild
#+begin_src shell
# Maintainer: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
pkgname=adobe-source-code-pro-fonts
pkgver=2.030ro+1.050it
_relver=2.030R-ro/1.050R-it
pkgrel=5
pkgdesc="Monospaced font family for user interface and coding environments"
url="https://adobe-fonts.github.io/source-code-pro/"
arch=(any)
license=(custom)
_tarname=source-code-pro-${_relver//\//-}
source=("$_tarname.tar.gz::https://github.com/adobe-fonts/source-code-pro/archive/$_relver.tar.gz"
        https://github.com/adobe-fonts/source-code-pro/releases/download/variable-fonts/SourceCodeVariable-Roman.otf
        https://github.com/adobe-fonts/source-code-pro/releases/download/variable-fonts/SourceCodeVariable-Italic.otf)
sha256sums=('a4e4dd59b8e0a436b934f0f612c2e91b5932910c6d1c3b7d1a5a9f389c86302b'
            'af8fdd265f6208816fde44062a27b79ce2a594ded44ea96055a1655b6869992d'
            'b2ca3a3c1fe0701ad74aa7c66c37972d07b1237197a816a1a5646c7e42a11353')

package() {
    cd $_tarname
    install -d "$pkgdir/usr/share/fonts/${pkgname%-fonts}"
    install -t "$pkgdir/usr/share/fonts/${pkgname%-fonts}" -m644 OTF/*.otf ../*.otf
    install -Dm644 LICENSE.txt "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
#+end_src

** my sample pkgbuild
#+begin_src shell
pkgname=
_tarname=source-code-pro-${_relver//\//-}

_relver=2.030R-ro/1.050R-it
source=("$_tarname.tar.gz::https://github.com/adobe-fonts/source-code-pro/archive/$_relver.tar.gz"
        https://github.com/adobe-fonts/source-code-pro/releases/download/variable-fonts/SourceCodeVariable-Roman.otf
        https://github.com/adobe-fonts/source-code-pro/releases/download/variable-fonts/SourceCodeVariable-Italic.otf)
#+end_src

* pacman
#+begin_src shell
pacman -S $(pacman -Si python-pip|sed -n '/Depends\ On/,/:/p'|sed '$d'|cut -d: -f2)
#+end_src

* ress
- [[https://www.youtube.com/watch?v=HbgzrKJvDRw][Linux File System/Structure Explained! - YouTube]]
- [[https://www.youtube.com/watch?v=l0QGLMwR-lY][Top 10 Linux Job Interview Questions - YouTube]]
- [[https://www.youtube.com/watch?v=l0QGLMwR-lY][Top 10 Linux Job Interview Questions - YouTube]]
